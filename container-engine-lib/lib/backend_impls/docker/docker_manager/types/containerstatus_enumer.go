// Code generated by "enumer -transform=lower -trimprefix=ContainerStatus_ -type=ContainerStatus"; DO NOT EDIT.

package types

import (
	"fmt"
	"strings"
)

const _ContainerStatusName = "pausedrestartingrunningremovingdeadcreatedexited"

var _ContainerStatusIndex = [...]uint8{0, 6, 16, 23, 31, 35, 42, 48}

const _ContainerStatusLowerName = "pausedrestartingrunningremovingdeadcreatedexited"

func (i ContainerStatus) String() string {
	if i < 0 || i >= ContainerStatus(len(_ContainerStatusIndex)-1) {
		return fmt.Sprintf("ContainerStatus(%d)", i)
	}
	return _ContainerStatusName[_ContainerStatusIndex[i]:_ContainerStatusIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ContainerStatusNoOp() {
	var x [1]struct{}
	_ = x[ContainerStatus_Paused-(0)]
	_ = x[ContainerStatus_Restarting-(1)]
	_ = x[ContainerStatus_Running-(2)]
	_ = x[ContainerStatus_Removing-(3)]
	_ = x[ContainerStatus_Dead-(4)]
	_ = x[ContainerStatus_Created-(5)]
	_ = x[ContainerStatus_Exited-(6)]
}

var _ContainerStatusValues = []ContainerStatus{ContainerStatus_Paused, ContainerStatus_Restarting, ContainerStatus_Running, ContainerStatus_Removing, ContainerStatus_Dead, ContainerStatus_Created, ContainerStatus_Exited}

var _ContainerStatusNameToValueMap = map[string]ContainerStatus{
	_ContainerStatusName[0:6]:        ContainerStatus_Paused,
	_ContainerStatusLowerName[0:6]:   ContainerStatus_Paused,
	_ContainerStatusName[6:16]:       ContainerStatus_Restarting,
	_ContainerStatusLowerName[6:16]:  ContainerStatus_Restarting,
	_ContainerStatusName[16:23]:      ContainerStatus_Running,
	_ContainerStatusLowerName[16:23]: ContainerStatus_Running,
	_ContainerStatusName[23:31]:      ContainerStatus_Removing,
	_ContainerStatusLowerName[23:31]: ContainerStatus_Removing,
	_ContainerStatusName[31:35]:      ContainerStatus_Dead,
	_ContainerStatusLowerName[31:35]: ContainerStatus_Dead,
	_ContainerStatusName[35:42]:      ContainerStatus_Created,
	_ContainerStatusLowerName[35:42]: ContainerStatus_Created,
	_ContainerStatusName[42:48]:      ContainerStatus_Exited,
	_ContainerStatusLowerName[42:48]: ContainerStatus_Exited,
}

var _ContainerStatusNames = []string{
	_ContainerStatusName[0:6],
	_ContainerStatusName[6:16],
	_ContainerStatusName[16:23],
	_ContainerStatusName[23:31],
	_ContainerStatusName[31:35],
	_ContainerStatusName[35:42],
	_ContainerStatusName[42:48],
}

// ContainerStatusString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ContainerStatusString(s string) (ContainerStatus, error) {
	if val, ok := _ContainerStatusNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ContainerStatusNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ContainerStatus values", s)
}

// ContainerStatusValues returns all values of the enum
func ContainerStatusValues() []ContainerStatus {
	return _ContainerStatusValues
}

// ContainerStatusStrings returns a slice of all String values of the enum
func ContainerStatusStrings() []string {
	strs := make([]string, len(_ContainerStatusNames))
	copy(strs, _ContainerStatusNames)
	return strs
}

// IsAContainerStatus returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ContainerStatus) IsAContainerStatus() bool {
	for _, v := range _ContainerStatusValues {
		if i == v {
			return true
		}
	}
	return false
}
