// Code generated by "enumer -transform=snake-upper -trimprefix=TransportProtocol_ -type=TransportProtocol"; DO NOT EDIT.

package port_spec

import (
	"fmt"
	"strings"
)

const _TransportProtocolName = "TCPSCTPUDP"

var _TransportProtocolIndex = [...]uint8{0, 3, 7, 10}

const _TransportProtocolLowerName = "tcpsctpudp"

func (i TransportProtocol) String() string {
	if i < 0 || i >= TransportProtocol(len(_TransportProtocolIndex)-1) {
		return fmt.Sprintf("TransportProtocol(%d)", i)
	}
	return _TransportProtocolName[_TransportProtocolIndex[i]:_TransportProtocolIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _TransportProtocolNoOp() {
	var x [1]struct{}
	_ = x[TransportProtocol_TCP-(0)]
	_ = x[TransportProtocol_SCTP-(1)]
	_ = x[TransportProtocol_UDP-(2)]
}

var _TransportProtocolValues = []TransportProtocol{TransportProtocol_TCP, TransportProtocol_SCTP, TransportProtocol_UDP}

var _TransportProtocolNameToValueMap = map[string]TransportProtocol{
	_TransportProtocolName[0:3]:       TransportProtocol_TCP,
	_TransportProtocolLowerName[0:3]:  TransportProtocol_TCP,
	_TransportProtocolName[3:7]:       TransportProtocol_SCTP,
	_TransportProtocolLowerName[3:7]:  TransportProtocol_SCTP,
	_TransportProtocolName[7:10]:      TransportProtocol_UDP,
	_TransportProtocolLowerName[7:10]: TransportProtocol_UDP,
}

var _TransportProtocolNames = []string{
	_TransportProtocolName[0:3],
	_TransportProtocolName[3:7],
	_TransportProtocolName[7:10],
}

// TransportProtocolString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func TransportProtocolString(s string) (TransportProtocol, error) {
	if val, ok := _TransportProtocolNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _TransportProtocolNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to TransportProtocol values", s)
}

// TransportProtocolValues returns all values of the enum
func TransportProtocolValues() []TransportProtocol {
	return _TransportProtocolValues
}

// TransportProtocolStrings returns a slice of all String values of the enum
func TransportProtocolStrings() []string {
	strs := make([]string, len(_TransportProtocolNames))
	copy(strs, _TransportProtocolNames)
	return strs
}

// IsATransportProtocol returns "true" if the value is listed in the enum definition. "false" otherwise
func (i TransportProtocol) IsATransportProtocol() bool {
	for _, v := range _TransportProtocolValues {
		if i == v {
			return true
		}
	}
	return false
}
