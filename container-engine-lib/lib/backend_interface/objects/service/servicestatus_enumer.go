// Code generated by "enumer -trimprefix=ServiceStatus_ -transform=snake-upper -type=ServiceStatus"; DO NOT EDIT.

package service

import (
	"fmt"
	"strings"
)

const _ServiceStatusName = "REGISTEREDSTARTEDSTOPPED"

var _ServiceStatusIndex = [...]uint8{0, 10, 17, 24}

const _ServiceStatusLowerName = "registeredstartedstopped"

func (i ServiceStatus) String() string {
	if i < 0 || i >= ServiceStatus(len(_ServiceStatusIndex)-1) {
		return fmt.Sprintf("ServiceStatus(%d)", i)
	}
	return _ServiceStatusName[_ServiceStatusIndex[i]:_ServiceStatusIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ServiceStatusNoOp() {
	var x [1]struct{}
	_ = x[ServiceStatus_Registered-(0)]
	_ = x[ServiceStatus_Started-(1)]
	_ = x[ServiceStatus_Stopped-(2)]
}

var _ServiceStatusValues = []ServiceStatus{ServiceStatus_Registered, ServiceStatus_Started, ServiceStatus_Stopped}

var _ServiceStatusNameToValueMap = map[string]ServiceStatus{
	_ServiceStatusName[0:10]:       ServiceStatus_Registered,
	_ServiceStatusLowerName[0:10]:  ServiceStatus_Registered,
	_ServiceStatusName[10:17]:      ServiceStatus_Started,
	_ServiceStatusLowerName[10:17]: ServiceStatus_Started,
	_ServiceStatusName[17:24]:      ServiceStatus_Stopped,
	_ServiceStatusLowerName[17:24]: ServiceStatus_Stopped,
}

var _ServiceStatusNames = []string{
	_ServiceStatusName[0:10],
	_ServiceStatusName[10:17],
	_ServiceStatusName[17:24],
}

// ServiceStatusString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ServiceStatusString(s string) (ServiceStatus, error) {
	if val, ok := _ServiceStatusNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ServiceStatusNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ServiceStatus values", s)
}

// ServiceStatusValues returns all values of the enum
func ServiceStatusValues() []ServiceStatus {
	return _ServiceStatusValues
}

// ServiceStatusStrings returns a slice of all String values of the enum
func ServiceStatusStrings() []string {
	strs := make([]string, len(_ServiceStatusNames))
	copy(strs, _ServiceStatusNames)
	return strs
}

// IsAServiceStatus returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ServiceStatus) IsAServiceStatus() bool {
	for _, v := range _ServiceStatusValues {
		if i == v {
			return true
		}
	}
	return false
}
