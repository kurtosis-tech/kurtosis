// Code generated by "enumer -trimprefix=EnclaveStatus_ -transform=snake-upper -type=EnclaveStatus"; DO NOT EDIT.

package enclave

import (
	"fmt"
	"strings"
)

const _EnclaveStatusName = "EMPTYRUNNINGSTOPPED"

var _EnclaveStatusIndex = [...]uint8{0, 5, 12, 19}

const _EnclaveStatusLowerName = "emptyrunningstopped"

func (i EnclaveStatus) String() string {
	if i < 0 || i >= EnclaveStatus(len(_EnclaveStatusIndex)-1) {
		return fmt.Sprintf("EnclaveStatus(%d)", i)
	}
	return _EnclaveStatusName[_EnclaveStatusIndex[i]:_EnclaveStatusIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _EnclaveStatusNoOp() {
	var x [1]struct{}
	_ = x[EnclaveStatus_Empty-(0)]
	_ = x[EnclaveStatus_Running-(1)]
	_ = x[EnclaveStatus_Stopped-(2)]
}

var _EnclaveStatusValues = []EnclaveStatus{EnclaveStatus_Empty, EnclaveStatus_Running, EnclaveStatus_Stopped}

var _EnclaveStatusNameToValueMap = map[string]EnclaveStatus{
	_EnclaveStatusName[0:5]:        EnclaveStatus_Empty,
	_EnclaveStatusLowerName[0:5]:   EnclaveStatus_Empty,
	_EnclaveStatusName[5:12]:       EnclaveStatus_Running,
	_EnclaveStatusLowerName[5:12]:  EnclaveStatus_Running,
	_EnclaveStatusName[12:19]:      EnclaveStatus_Stopped,
	_EnclaveStatusLowerName[12:19]: EnclaveStatus_Stopped,
}

var _EnclaveStatusNames = []string{
	_EnclaveStatusName[0:5],
	_EnclaveStatusName[5:12],
	_EnclaveStatusName[12:19],
}

// EnclaveStatusString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func EnclaveStatusString(s string) (EnclaveStatus, error) {
	if val, ok := _EnclaveStatusNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _EnclaveStatusNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to EnclaveStatus values", s)
}

// EnclaveStatusValues returns all values of the enum
func EnclaveStatusValues() []EnclaveStatus {
	return _EnclaveStatusValues
}

// EnclaveStatusStrings returns a slice of all String values of the enum
func EnclaveStatusStrings() []string {
	strs := make([]string, len(_EnclaveStatusNames))
	copy(strs, _EnclaveStatusNames)
	return strs
}

// IsAEnclaveStatus returns "true" if the value is listed in the enum definition. "false" otherwise
func (i EnclaveStatus) IsAEnclaveStatus() bool {
	for _, v := range _EnclaveStatusValues {
		if i == v {
			return true
		}
	}
	return false
}
