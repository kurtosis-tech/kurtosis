// Code generated by "enumer -type=KurtosisClusterType -trimprefix=KurtosisClusterType_ -transform=snake"; DO NOT EDIT.

package resolved_config

import (
	"fmt"
	"strings"
)

const _KurtosisClusterTypeName = "dockerkubernetespodman"

var _KurtosisClusterTypeIndex = [...]uint8{0, 6, 16, 22}

const _KurtosisClusterTypeLowerName = "dockerkubernetespodman"

func (i KurtosisClusterType) String() string {
	if i < 0 || i >= KurtosisClusterType(len(_KurtosisClusterTypeIndex)-1) {
		return fmt.Sprintf("KurtosisClusterType(%d)", i)
	}
	return _KurtosisClusterTypeName[_KurtosisClusterTypeIndex[i]:_KurtosisClusterTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _KurtosisClusterTypeNoOp() {
	var x [1]struct{}
	_ = x[KurtosisClusterType_Docker-(0)]
	_ = x[KurtosisClusterType_Kubernetes-(1)]
	_ = x[KurtosisClusterType_Podman-(2)]
}

var _KurtosisClusterTypeValues = []KurtosisClusterType{KurtosisClusterType_Docker, KurtosisClusterType_Kubernetes, KurtosisClusterType_Podman}

var _KurtosisClusterTypeNameToValueMap = map[string]KurtosisClusterType{
	_KurtosisClusterTypeName[0:6]:        KurtosisClusterType_Docker,
	_KurtosisClusterTypeLowerName[0:6]:   KurtosisClusterType_Docker,
	_KurtosisClusterTypeName[6:16]:       KurtosisClusterType_Kubernetes,
	_KurtosisClusterTypeLowerName[6:16]:  KurtosisClusterType_Kubernetes,
	_KurtosisClusterTypeName[16:22]:      KurtosisClusterType_Podman,
	_KurtosisClusterTypeLowerName[16:22]: KurtosisClusterType_Podman,
}

var _KurtosisClusterTypeNames = []string{
	_KurtosisClusterTypeName[0:6],
	_KurtosisClusterTypeName[6:16],
	_KurtosisClusterTypeName[16:22],
}

// KurtosisClusterTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func KurtosisClusterTypeString(s string) (KurtosisClusterType, error) {
	if val, ok := _KurtosisClusterTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _KurtosisClusterTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to KurtosisClusterType values", s)
}

// KurtosisClusterTypeValues returns all values of the enum
func KurtosisClusterTypeValues() []KurtosisClusterType {
	return _KurtosisClusterTypeValues
}

// KurtosisClusterTypeStrings returns a slice of all String values of the enum
func KurtosisClusterTypeStrings() []string {
	strs := make([]string, len(_KurtosisClusterTypeNames))
	copy(strs, _KurtosisClusterTypeNames)
	return strs
}

// IsAKurtosisClusterType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i KurtosisClusterType) IsAKurtosisClusterType() bool {
	for _, v := range _KurtosisClusterTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
