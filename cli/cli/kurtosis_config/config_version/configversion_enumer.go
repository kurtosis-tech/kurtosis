// Code generated by "enumer -type=ConfigVersion"; DO NOT EDIT.

package config_version

import (
	"fmt"
	"strings"
)

const _ConfigVersionName = "ConfigVersion_v0ConfigVersion_v1ConfigVersion_v2"

var _ConfigVersionIndex = [...]uint8{0, 16, 32, 48}

const _ConfigVersionLowerName = "configversion_v0configversion_v1configversion_v2"

func (i ConfigVersion) String() string {
	if i >= ConfigVersion(len(_ConfigVersionIndex)-1) {
		return fmt.Sprintf("ConfigVersion(%d)", i)
	}
	return _ConfigVersionName[_ConfigVersionIndex[i]:_ConfigVersionIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ConfigVersionNoOp() {
	var x [1]struct{}
	_ = x[ConfigVersion_v0-(0)]
	_ = x[ConfigVersion_v1-(1)]
	_ = x[ConfigVersion_v2-(2)]
}

var _ConfigVersionValues = []ConfigVersion{ConfigVersion_v0, ConfigVersion_v1, ConfigVersion_v2}

var _ConfigVersionNameToValueMap = map[string]ConfigVersion{
	_ConfigVersionName[0:16]:       ConfigVersion_v0,
	_ConfigVersionLowerName[0:16]:  ConfigVersion_v0,
	_ConfigVersionName[16:32]:      ConfigVersion_v1,
	_ConfigVersionLowerName[16:32]: ConfigVersion_v1,
	_ConfigVersionName[32:48]:      ConfigVersion_v2,
	_ConfigVersionLowerName[32:48]: ConfigVersion_v2,
}

var _ConfigVersionNames = []string{
	_ConfigVersionName[0:16],
	_ConfigVersionName[16:32],
	_ConfigVersionName[32:48],
}

// ConfigVersionString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ConfigVersionString(s string) (ConfigVersion, error) {
	if val, ok := _ConfigVersionNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ConfigVersionNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ConfigVersion values", s)
}

// ConfigVersionValues returns all values of the enum
func ConfigVersionValues() []ConfigVersion {
	return _ConfigVersionValues
}

// ConfigVersionStrings returns a slice of all String values of the enum
func ConfigVersionStrings() []string {
	strs := make([]string, len(_ConfigVersionNames))
	copy(strs, _ConfigVersionNames)
	return strs
}

// IsAConfigVersion returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ConfigVersion) IsAConfigVersion() bool {
	for _, v := range _ConfigVersionValues {
		if i == v {
			return true
		}
	}
	return false
}
