// Code generated by "enumer -type=FileSystemPathType -trimprefix=FileSystemPathType_ -transform=snake"; DO NOT EDIT.

package file_system_path_arg

import (
	"fmt"
	"strings"
)

const _FileSystemPathTypeName = "filepathdirpathfilepath_or_dirpath"

var _FileSystemPathTypeIndex = [...]uint8{0, 8, 15, 34}

const _FileSystemPathTypeLowerName = "filepathdirpathfilepath_or_dirpath"

func (i FileSystemPathType) String() string {
	if i < 0 || i >= FileSystemPathType(len(_FileSystemPathTypeIndex)-1) {
		return fmt.Sprintf("FileSystemPathType(%d)", i)
	}
	return _FileSystemPathTypeName[_FileSystemPathTypeIndex[i]:_FileSystemPathTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _FileSystemPathTypeNoOp() {
	var x [1]struct{}
	_ = x[FileSystemPathType_Filepath-(0)]
	_ = x[FileSystemPathType_Dirpath-(1)]
	_ = x[FileSystemPathType_FilepathOrDirpath-(2)]
}

var _FileSystemPathTypeValues = []FileSystemPathType{FileSystemPathType_Filepath, FileSystemPathType_Dirpath, FileSystemPathType_FilepathOrDirpath}

var _FileSystemPathTypeNameToValueMap = map[string]FileSystemPathType{
	_FileSystemPathTypeName[0:8]:        FileSystemPathType_Filepath,
	_FileSystemPathTypeLowerName[0:8]:   FileSystemPathType_Filepath,
	_FileSystemPathTypeName[8:15]:       FileSystemPathType_Dirpath,
	_FileSystemPathTypeLowerName[8:15]:  FileSystemPathType_Dirpath,
	_FileSystemPathTypeName[15:34]:      FileSystemPathType_FilepathOrDirpath,
	_FileSystemPathTypeLowerName[15:34]: FileSystemPathType_FilepathOrDirpath,
}

var _FileSystemPathTypeNames = []string{
	_FileSystemPathTypeName[0:8],
	_FileSystemPathTypeName[8:15],
	_FileSystemPathTypeName[15:34],
}

// FileSystemPathTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func FileSystemPathTypeString(s string) (FileSystemPathType, error) {
	if val, ok := _FileSystemPathTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _FileSystemPathTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to FileSystemPathType values", s)
}

// FileSystemPathTypeValues returns all values of the enum
func FileSystemPathTypeValues() []FileSystemPathType {
	return _FileSystemPathTypeValues
}

// FileSystemPathTypeStrings returns a slice of all String values of the enum
func FileSystemPathTypeStrings() []string {
	strs := make([]string, len(_FileSystemPathTypeNames))
	copy(strs, _FileSystemPathTypeNames)
	return strs
}

// IsAFileSystemPathType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i FileSystemPathType) IsAFileSystemPathType() bool {
	for _, v := range _FileSystemPathTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
