// Code generated by "enumer -type=ImageDownload -transform=snake-upper"; DO NOT EDIT.

package run

import (
	"fmt"
	"strings"
)

const _ImageDownloadName = "NEVERALWAYSMISSING"

var _ImageDownloadIndex = [...]uint8{0, 5, 11, 18}

const _ImageDownloadLowerName = "neveralwaysmissing"

func (i ImageDownload) String() string {
	if i < 0 || i >= ImageDownload(len(_ImageDownloadIndex)-1) {
		return fmt.Sprintf("ImageDownload(%d)", i)
	}
	return _ImageDownloadName[_ImageDownloadIndex[i]:_ImageDownloadIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ImageDownloadNoOp() {
	var x [1]struct{}
	_ = x[never-(0)]
	_ = x[always-(1)]
	_ = x[missing-(2)]
}

var _ImageDownloadValues = []ImageDownload{never, always, missing}

var _ImageDownloadNameToValueMap = map[string]ImageDownload{
	_ImageDownloadName[0:5]:        never,
	_ImageDownloadLowerName[0:5]:   never,
	_ImageDownloadName[5:11]:       always,
	_ImageDownloadLowerName[5:11]:  always,
	_ImageDownloadName[11:18]:      missing,
	_ImageDownloadLowerName[11:18]: missing,
}

var _ImageDownloadNames = []string{
	_ImageDownloadName[0:5],
	_ImageDownloadName[5:11],
	_ImageDownloadName[11:18],
}

// ImageDownloadString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ImageDownloadString(s string) (ImageDownload, error) {
	if val, ok := _ImageDownloadNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ImageDownloadNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ImageDownload values", s)
}

// ImageDownloadValues returns all values of the enum
func ImageDownloadValues() []ImageDownload {
	return _ImageDownloadValues
}

// ImageDownloadStrings returns a slice of all String values of the enum
func ImageDownloadStrings() []string {
	strs := make([]string, len(_ImageDownloadNames))
	copy(strs, _ImageDownloadNames)
	return strs
}

// IsAImageDownload returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ImageDownload) IsAImageDownload() bool {
	for _, v := range _ImageDownloadValues {
		if i == v {
			return true
		}
	}
	return false
}
