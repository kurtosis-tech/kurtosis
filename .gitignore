# Ignoring the file that gets generated with the repo's version
/kurtosis_version/kurtosis_version.go

# IntelliJ
.idea
*.iws
*.iml
*.ipr

# VS Code
*.vscode

# Jenv
.java-version

# Pyenv
.python-version

# Mac spotlight index files
.DS_Store

*.un~
Session.vim
.netrwhist
*~
*.pyc
*.pydevproject
.project
.metadata
bin/**
tmp/**
tmp/**/*
*.tmp
*.bak
*~.nib
local.properties
.classpath
.settings/
.loadpath

# Vim swapfiles
*.swp

# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Archive files
*.tgz
*.zip

# External tool builders
.externalToolBuilders/

# Locally stored "Eclipse launch configurations"
*.launch

# CDT-specific
.cproject

# PDT-specific
.buildpath

# Ignore Vim helptags
doc/tags

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Test binary, built with `go test -c`
*.test

# Docker Buildx Logfile
/2d

# Output directories
build/
dist/
cli/cli/scripts/completions/

# Java
.gradle

# Node
node_modules
yarn-error.log
frontend/node_modules/

# Bazel
/bazel-*

# Typescript
tsconfig.tsbuildinfo

# Generated files
.docusaurus
.cache-loader

# We had a bug where we were using both Yarn and NPM to maintain Docusaurus, which
# meant separate and conflicting lockfiles
# We don't want NPM lockfiles for Docusaurus - just Yarn
docs/package-lock.json

# Rust SDK

# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# direnv files
.direnv

# Lerna debug
lerna-debug.log