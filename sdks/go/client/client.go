// Code generated by Fern. DO NOT EDIT.

package client

import (
	core "github.com/kurtosis-tech/kurtosis/sdks/go/core"
	enclave "github.com/kurtosis-tech/kurtosis/sdks/go/enclave"
	engine "github.com/kurtosis-tech/kurtosis/sdks/go/engine"
	internal "github.com/kurtosis-tech/kurtosis/sdks/go/internal"
	option "github.com/kurtosis-tech/kurtosis/sdks/go/option"
	streaming "github.com/kurtosis-tech/kurtosis/sdks/go/streaming"
)

type Client struct {
	Engine    *engine.Client
	Enclave   *enclave.Client
	Streaming *streaming.Client

	options *core.RequestOptions
	baseURL string
	caller  *internal.Caller
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		Engine:    engine.NewClient(options),
		Enclave:   enclave.NewClient(options),
		Streaming: streaming.NewClient(options),
		options:   options,
		baseURL:   options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
	}
}
