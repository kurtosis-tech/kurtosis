// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: portal_daemon_service.proto

package kurtosis_portal_rpc_api_bindings

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// may specify a specific port, or an entire enclave's worth of services and ports
type EnclaveServicePortId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnclaveId string  `protobuf:"bytes,1,opt,name=enclave_id,json=enclaveId,proto3" json:"enclave_id,omitempty"`
	ServiceId *string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3,oneof" json:"service_id,omitempty"`
	PortId    *string `protobuf:"bytes,3,opt,name=port_id,json=portId,proto3,oneof" json:"port_id,omitempty"`
}

func (x *EnclaveServicePortId) Reset() {
	*x = EnclaveServicePortId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_daemon_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnclaveServicePortId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnclaveServicePortId) ProtoMessage() {}

func (x *EnclaveServicePortId) ProtoReflect() protoreflect.Message {
	mi := &file_portal_daemon_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnclaveServicePortId.ProtoReflect.Descriptor instead.
func (*EnclaveServicePortId) Descriptor() ([]byte, []int) {
	return file_portal_daemon_service_proto_rawDescGZIP(), []int{0}
}

func (x *EnclaveServicePortId) GetEnclaveId() string {
	if x != nil {
		return x.EnclaveId
	}
	return ""
}

func (x *EnclaveServicePortId) GetServiceId() string {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return ""
}

func (x *EnclaveServicePortId) GetPortId() string {
	if x != nil && x.PortId != nil {
		return *x.PortId
	}
	return ""
}

type ForwardedServicePort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnclaveId       string `protobuf:"bytes,1,opt,name=enclave_id,json=enclaveId,proto3" json:"enclave_id,omitempty"`
	ServiceId       string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	PortId          string `protobuf:"bytes,3,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	LocalPortNumber uint32 `protobuf:"varint,4,opt,name=local_port_number,json=localPortNumber,proto3" json:"local_port_number,omitempty"`
}

func (x *ForwardedServicePort) Reset() {
	*x = ForwardedServicePort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_daemon_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardedServicePort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardedServicePort) ProtoMessage() {}

func (x *ForwardedServicePort) ProtoReflect() protoreflect.Message {
	mi := &file_portal_daemon_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardedServicePort.ProtoReflect.Descriptor instead.
func (*ForwardedServicePort) Descriptor() ([]byte, []int) {
	return file_portal_daemon_service_proto_rawDescGZIP(), []int{1}
}

func (x *ForwardedServicePort) GetEnclaveId() string {
	if x != nil {
		return x.EnclaveId
	}
	return ""
}

func (x *ForwardedServicePort) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ForwardedServicePort) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

func (x *ForwardedServicePort) GetLocalPortNumber() uint32 {
	if x != nil {
		return x.LocalPortNumber
	}
	return 0
}

type CreateUserServicePortForwardArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnclaveServicePortId *EnclaveServicePortId `protobuf:"bytes,1,opt,name=enclaveServicePortId,proto3" json:"enclaveServicePortId,omitempty"`
	LocalPortNumber      *uint32               `protobuf:"varint,2,opt,name=local_port_number,json=localPortNumber,proto3,oneof" json:"local_port_number,omitempty"`
}

func (x *CreateUserServicePortForwardArgs) Reset() {
	*x = CreateUserServicePortForwardArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_daemon_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserServicePortForwardArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserServicePortForwardArgs) ProtoMessage() {}

func (x *CreateUserServicePortForwardArgs) ProtoReflect() protoreflect.Message {
	mi := &file_portal_daemon_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserServicePortForwardArgs.ProtoReflect.Descriptor instead.
func (*CreateUserServicePortForwardArgs) Descriptor() ([]byte, []int) {
	return file_portal_daemon_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateUserServicePortForwardArgs) GetEnclaveServicePortId() *EnclaveServicePortId {
	if x != nil {
		return x.EnclaveServicePortId
	}
	return nil
}

func (x *CreateUserServicePortForwardArgs) GetLocalPortNumber() uint32 {
	if x != nil && x.LocalPortNumber != nil {
		return *x.LocalPortNumber
	}
	return 0
}

type CreateUserServicePortForwardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForwardedPortNumbers []*ForwardedServicePort `protobuf:"bytes,1,rep,name=forwarded_port_numbers,json=forwardedPortNumbers,proto3" json:"forwarded_port_numbers,omitempty"`
}

func (x *CreateUserServicePortForwardResponse) Reset() {
	*x = CreateUserServicePortForwardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_daemon_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserServicePortForwardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserServicePortForwardResponse) ProtoMessage() {}

func (x *CreateUserServicePortForwardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_portal_daemon_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserServicePortForwardResponse.ProtoReflect.Descriptor instead.
func (*CreateUserServicePortForwardResponse) Descriptor() ([]byte, []int) {
	return file_portal_daemon_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateUserServicePortForwardResponse) GetForwardedPortNumbers() []*ForwardedServicePort {
	if x != nil {
		return x.ForwardedPortNumbers
	}
	return nil
}

type RemoveUserServicePortForwardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveUserServicePortForwardResponse) Reset() {
	*x = RemoveUserServicePortForwardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_daemon_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserServicePortForwardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserServicePortForwardResponse) ProtoMessage() {}

func (x *RemoveUserServicePortForwardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_portal_daemon_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserServicePortForwardResponse.ProtoReflect.Descriptor instead.
func (*RemoveUserServicePortForwardResponse) Descriptor() ([]byte, []int) {
	return file_portal_daemon_service_proto_rawDescGZIP(), []int{4}
}

type PortalPing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PortalPing) Reset() {
	*x = PortalPing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_daemon_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalPing) ProtoMessage() {}

func (x *PortalPing) ProtoReflect() protoreflect.Message {
	mi := &file_portal_daemon_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalPing.ProtoReflect.Descriptor instead.
func (*PortalPing) Descriptor() ([]byte, []int) {
	return file_portal_daemon_service_proto_rawDescGZIP(), []int{5}
}

type PortalPong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PortalPong) Reset() {
	*x = PortalPong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_daemon_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortalPong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortalPong) ProtoMessage() {}

func (x *PortalPong) ProtoReflect() protoreflect.Message {
	mi := &file_portal_daemon_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortalPong.ProtoReflect.Descriptor instead.
func (*PortalPong) Descriptor() ([]byte, []int) {
	return file_portal_daemon_service_proto_rawDescGZIP(), []int{6}
}

var File_portal_daemon_service_proto protoreflect.FileDescriptor

var file_portal_daemon_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x70,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x69,
	0x22, 0x92, 0x01, 0x0a, 0x14, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x63,
	0x6c, 0x61, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x14, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0xc6, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x41, 0x72, 0x67, 0x73, 0x12, 0x5b, 0x0a, 0x14, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x52, 0x14, 0x65,
	0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x85, 0x01, 0x0a, 0x24, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x16, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x14, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x22, 0x26, 0x0a, 0x24, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0c, 0x0a, 0x0a, 0x50, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x50, 0x69, 0x6e, 0x67, 0x22, 0x0c, 0x0a, 0x0a, 0x50, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x50, 0x6f, 0x6e, 0x67, 0x32, 0xf4, 0x02, 0x0a, 0x14, 0x4b, 0x75, 0x72, 0x74, 0x6f,
	0x73, 0x69, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x12,
	0x46, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x50, 0x69, 0x6e, 0x67, 0x1a, 0x1d, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x50, 0x6f, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x33, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x37, 0x2e,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x27, 0x2e, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6e,
	0x63, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x49, 0x64, 0x1a, 0x37, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x56, 0x5a,
	0x54, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x75, 0x72, 0x74,
	0x6f, 0x73, 0x69, 0x73, 0x2d, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x6b, 0x75, 0x72, 0x74, 0x6f, 0x73,
	0x69, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x2f, 0x6b, 0x75, 0x72, 0x74, 0x6f, 0x73, 0x69, 0x73, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x62, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_portal_daemon_service_proto_rawDescOnce sync.Once
	file_portal_daemon_service_proto_rawDescData = file_portal_daemon_service_proto_rawDesc
)

func file_portal_daemon_service_proto_rawDescGZIP() []byte {
	file_portal_daemon_service_proto_rawDescOnce.Do(func() {
		file_portal_daemon_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_portal_daemon_service_proto_rawDescData)
	})
	return file_portal_daemon_service_proto_rawDescData
}

var file_portal_daemon_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_portal_daemon_service_proto_goTypes = []interface{}{
	(*EnclaveServicePortId)(nil),                 // 0: portal_daemon_api.EnclaveServicePortId
	(*ForwardedServicePort)(nil),                 // 1: portal_daemon_api.ForwardedServicePort
	(*CreateUserServicePortForwardArgs)(nil),     // 2: portal_daemon_api.CreateUserServicePortForwardArgs
	(*CreateUserServicePortForwardResponse)(nil), // 3: portal_daemon_api.CreateUserServicePortForwardResponse
	(*RemoveUserServicePortForwardResponse)(nil), // 4: portal_daemon_api.RemoveUserServicePortForwardResponse
	(*PortalPing)(nil),                           // 5: portal_daemon_api.PortalPing
	(*PortalPong)(nil),                           // 6: portal_daemon_api.PortalPong
}
var file_portal_daemon_service_proto_depIdxs = []int32{
	0, // 0: portal_daemon_api.CreateUserServicePortForwardArgs.enclaveServicePortId:type_name -> portal_daemon_api.EnclaveServicePortId
	1, // 1: portal_daemon_api.CreateUserServicePortForwardResponse.forwarded_port_numbers:type_name -> portal_daemon_api.ForwardedServicePort
	5, // 2: portal_daemon_api.KurtosisPortalDaemon.Ping:input_type -> portal_daemon_api.PortalPing
	2, // 3: portal_daemon_api.KurtosisPortalDaemon.CreateUserServicePortForward:input_type -> portal_daemon_api.CreateUserServicePortForwardArgs
	0, // 4: portal_daemon_api.KurtosisPortalDaemon.RemoveUserServicePortForward:input_type -> portal_daemon_api.EnclaveServicePortId
	6, // 5: portal_daemon_api.KurtosisPortalDaemon.Ping:output_type -> portal_daemon_api.PortalPong
	3, // 6: portal_daemon_api.KurtosisPortalDaemon.CreateUserServicePortForward:output_type -> portal_daemon_api.CreateUserServicePortForwardResponse
	4, // 7: portal_daemon_api.KurtosisPortalDaemon.RemoveUserServicePortForward:output_type -> portal_daemon_api.RemoveUserServicePortForwardResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_portal_daemon_service_proto_init() }
func file_portal_daemon_service_proto_init() {
	if File_portal_daemon_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_portal_daemon_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnclaveServicePortId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_daemon_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardedServicePort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_daemon_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserServicePortForwardArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_daemon_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserServicePortForwardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_daemon_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserServicePortForwardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_daemon_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalPing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_daemon_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortalPong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_portal_daemon_service_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_portal_daemon_service_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_portal_daemon_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_portal_daemon_service_proto_goTypes,
		DependencyIndexes: file_portal_daemon_service_proto_depIdxs,
		MessageInfos:      file_portal_daemon_service_proto_msgTypes,
	}.Build()
	File_portal_daemon_service_proto = out.File
	file_portal_daemon_service_proto_rawDesc = nil
	file_portal_daemon_service_proto_goTypes = nil
	file_portal_daemon_service_proto_depIdxs = nil
}
