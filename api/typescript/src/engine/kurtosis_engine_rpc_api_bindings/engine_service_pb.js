// source: engine_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.engine_api.CleanArgs', null, global);
goog.exportSymbol('proto.engine_api.CleanResponse', null, global);
goog.exportSymbol('proto.engine_api.CreateEnclaveArgs', null, global);
goog.exportSymbol('proto.engine_api.CreateEnclaveResponse', null, global);
goog.exportSymbol('proto.engine_api.DestroyEnclaveArgs', null, global);
goog.exportSymbol('proto.engine_api.EnclaveAPIContainerHostMachineInfo', null, global);
goog.exportSymbol('proto.engine_api.EnclaveAPIContainerInfo', null, global);
goog.exportSymbol('proto.engine_api.EnclaveAPIContainerStatus', null, global);
goog.exportSymbol('proto.engine_api.EnclaveContainersStatus', null, global);
goog.exportSymbol('proto.engine_api.EnclaveIdentifiers', null, global);
goog.exportSymbol('proto.engine_api.EnclaveInfo', null, global);
goog.exportSymbol('proto.engine_api.EnclaveNameAndUuid', null, global);
goog.exportSymbol('proto.engine_api.GetEnclavesResponse', null, global);
goog.exportSymbol('proto.engine_api.GetEngineInfoResponse', null, global);
goog.exportSymbol('proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse', null, global);
goog.exportSymbol('proto.engine_api.GetServiceLogsArgs', null, global);
goog.exportSymbol('proto.engine_api.GetServiceLogsResponse', null, global);
goog.exportSymbol('proto.engine_api.LogLine', null, global);
goog.exportSymbol('proto.engine_api.LogLineFilter', null, global);
goog.exportSymbol('proto.engine_api.LogLineOperator', null, global);
goog.exportSymbol('proto.engine_api.StopEnclaveArgs', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.GetEngineInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engine_api.GetEngineInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.GetEngineInfoResponse.displayName = 'proto.engine_api.GetEngineInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.CreateEnclaveArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engine_api.CreateEnclaveArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.CreateEnclaveArgs.displayName = 'proto.engine_api.CreateEnclaveArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.CreateEnclaveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engine_api.CreateEnclaveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.CreateEnclaveResponse.displayName = 'proto.engine_api.CreateEnclaveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.EnclaveAPIContainerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engine_api.EnclaveAPIContainerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.EnclaveAPIContainerInfo.displayName = 'proto.engine_api.EnclaveAPIContainerInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.EnclaveAPIContainerHostMachineInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engine_api.EnclaveAPIContainerHostMachineInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.EnclaveAPIContainerHostMachineInfo.displayName = 'proto.engine_api.EnclaveAPIContainerHostMachineInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.EnclaveInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engine_api.EnclaveInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.EnclaveInfo.displayName = 'proto.engine_api.EnclaveInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.GetEnclavesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engine_api.GetEnclavesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.GetEnclavesResponse.displayName = 'proto.engine_api.GetEnclavesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.EnclaveIdentifiers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engine_api.EnclaveIdentifiers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.EnclaveIdentifiers.displayName = 'proto.engine_api.EnclaveIdentifiers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse.repeatedFields_, null);
};
goog.inherits(proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse.displayName = 'proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.StopEnclaveArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engine_api.StopEnclaveArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.StopEnclaveArgs.displayName = 'proto.engine_api.StopEnclaveArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.DestroyEnclaveArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engine_api.DestroyEnclaveArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.DestroyEnclaveArgs.displayName = 'proto.engine_api.DestroyEnclaveArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.CleanArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engine_api.CleanArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.CleanArgs.displayName = 'proto.engine_api.CleanArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.EnclaveNameAndUuid = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engine_api.EnclaveNameAndUuid, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.EnclaveNameAndUuid.displayName = 'proto.engine_api.EnclaveNameAndUuid';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.CleanResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.engine_api.CleanResponse.repeatedFields_, null);
};
goog.inherits(proto.engine_api.CleanResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.CleanResponse.displayName = 'proto.engine_api.CleanResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.GetServiceLogsArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.engine_api.GetServiceLogsArgs.repeatedFields_, null);
};
goog.inherits(proto.engine_api.GetServiceLogsArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.GetServiceLogsArgs.displayName = 'proto.engine_api.GetServiceLogsArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.GetServiceLogsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engine_api.GetServiceLogsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.GetServiceLogsResponse.displayName = 'proto.engine_api.GetServiceLogsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.LogLine = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.engine_api.LogLine.repeatedFields_, null);
};
goog.inherits(proto.engine_api.LogLine, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.LogLine.displayName = 'proto.engine_api.LogLine';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.engine_api.LogLineFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.engine_api.LogLineFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.engine_api.LogLineFilter.displayName = 'proto.engine_api.LogLineFilter';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.GetEngineInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.GetEngineInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.GetEngineInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.GetEngineInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    engineVersion: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.GetEngineInfoResponse}
 */
proto.engine_api.GetEngineInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.GetEngineInfoResponse;
  return proto.engine_api.GetEngineInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.GetEngineInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.GetEngineInfoResponse}
 */
proto.engine_api.GetEngineInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEngineVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.GetEngineInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.GetEngineInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.GetEngineInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.GetEngineInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEngineVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string engine_version = 1;
 * @return {string}
 */
proto.engine_api.GetEngineInfoResponse.prototype.getEngineVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.GetEngineInfoResponse} returns this
 */
proto.engine_api.GetEngineInfoResponse.prototype.setEngineVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.CreateEnclaveArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.CreateEnclaveArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.CreateEnclaveArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.CreateEnclaveArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    enclaveName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    apiContainerVersionTag: jspb.Message.getFieldWithDefault(msg, 2, ""),
    apiContainerLogLevel: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isPartitioningEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.CreateEnclaveArgs}
 */
proto.engine_api.CreateEnclaveArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.CreateEnclaveArgs;
  return proto.engine_api.CreateEnclaveArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.CreateEnclaveArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.CreateEnclaveArgs}
 */
proto.engine_api.CreateEnclaveArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnclaveName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiContainerVersionTag(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiContainerLogLevel(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPartitioningEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.CreateEnclaveArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.CreateEnclaveArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.CreateEnclaveArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.CreateEnclaveArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnclaveName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApiContainerVersionTag();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getApiContainerLogLevel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsPartitioningEnabled();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string enclave_name = 1;
 * @return {string}
 */
proto.engine_api.CreateEnclaveArgs.prototype.getEnclaveName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.CreateEnclaveArgs} returns this
 */
proto.engine_api.CreateEnclaveArgs.prototype.setEnclaveName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string api_container_version_tag = 2;
 * @return {string}
 */
proto.engine_api.CreateEnclaveArgs.prototype.getApiContainerVersionTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.CreateEnclaveArgs} returns this
 */
proto.engine_api.CreateEnclaveArgs.prototype.setApiContainerVersionTag = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string api_container_log_level = 3;
 * @return {string}
 */
proto.engine_api.CreateEnclaveArgs.prototype.getApiContainerLogLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.CreateEnclaveArgs} returns this
 */
proto.engine_api.CreateEnclaveArgs.prototype.setApiContainerLogLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool is_partitioning_enabled = 4;
 * @return {boolean}
 */
proto.engine_api.CreateEnclaveArgs.prototype.getIsPartitioningEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.engine_api.CreateEnclaveArgs} returns this
 */
proto.engine_api.CreateEnclaveArgs.prototype.setIsPartitioningEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.CreateEnclaveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.CreateEnclaveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.CreateEnclaveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.CreateEnclaveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    enclaveInfo: (f = msg.getEnclaveInfo()) && proto.engine_api.EnclaveInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.CreateEnclaveResponse}
 */
proto.engine_api.CreateEnclaveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.CreateEnclaveResponse;
  return proto.engine_api.CreateEnclaveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.CreateEnclaveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.CreateEnclaveResponse}
 */
proto.engine_api.CreateEnclaveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.engine_api.EnclaveInfo;
      reader.readMessage(value,proto.engine_api.EnclaveInfo.deserializeBinaryFromReader);
      msg.setEnclaveInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.CreateEnclaveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.CreateEnclaveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.CreateEnclaveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.CreateEnclaveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnclaveInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.engine_api.EnclaveInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional EnclaveInfo enclave_info = 1;
 * @return {?proto.engine_api.EnclaveInfo}
 */
proto.engine_api.CreateEnclaveResponse.prototype.getEnclaveInfo = function() {
  return /** @type{?proto.engine_api.EnclaveInfo} */ (
    jspb.Message.getWrapperField(this, proto.engine_api.EnclaveInfo, 1));
};


/**
 * @param {?proto.engine_api.EnclaveInfo|undefined} value
 * @return {!proto.engine_api.CreateEnclaveResponse} returns this
*/
proto.engine_api.CreateEnclaveResponse.prototype.setEnclaveInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.engine_api.CreateEnclaveResponse} returns this
 */
proto.engine_api.CreateEnclaveResponse.prototype.clearEnclaveInfo = function() {
  return this.setEnclaveInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.engine_api.CreateEnclaveResponse.prototype.hasEnclaveInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.EnclaveAPIContainerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.EnclaveAPIContainerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.EnclaveAPIContainerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.EnclaveAPIContainerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    containerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ipInsideEnclave: jspb.Message.getFieldWithDefault(msg, 2, ""),
    grpcPortInsideEnclave: jspb.Message.getFieldWithDefault(msg, 3, 0),
    grpcProxyPortInsideEnclave: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.EnclaveAPIContainerInfo}
 */
proto.engine_api.EnclaveAPIContainerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.EnclaveAPIContainerInfo;
  return proto.engine_api.EnclaveAPIContainerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.EnclaveAPIContainerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.EnclaveAPIContainerInfo}
 */
proto.engine_api.EnclaveAPIContainerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContainerId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpInsideEnclave(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGrpcPortInsideEnclave(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGrpcProxyPortInsideEnclave(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.EnclaveAPIContainerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.EnclaveAPIContainerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.EnclaveAPIContainerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.EnclaveAPIContainerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIpInsideEnclave();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGrpcPortInsideEnclave();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getGrpcProxyPortInsideEnclave();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional string container_id = 1;
 * @return {string}
 */
proto.engine_api.EnclaveAPIContainerInfo.prototype.getContainerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.EnclaveAPIContainerInfo} returns this
 */
proto.engine_api.EnclaveAPIContainerInfo.prototype.setContainerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ip_inside_enclave = 2;
 * @return {string}
 */
proto.engine_api.EnclaveAPIContainerInfo.prototype.getIpInsideEnclave = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.EnclaveAPIContainerInfo} returns this
 */
proto.engine_api.EnclaveAPIContainerInfo.prototype.setIpInsideEnclave = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 grpc_port_inside_enclave = 3;
 * @return {number}
 */
proto.engine_api.EnclaveAPIContainerInfo.prototype.getGrpcPortInsideEnclave = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.engine_api.EnclaveAPIContainerInfo} returns this
 */
proto.engine_api.EnclaveAPIContainerInfo.prototype.setGrpcPortInsideEnclave = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 grpc_proxy_port_inside_enclave = 4;
 * @return {number}
 */
proto.engine_api.EnclaveAPIContainerInfo.prototype.getGrpcProxyPortInsideEnclave = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.engine_api.EnclaveAPIContainerInfo} returns this
 */
proto.engine_api.EnclaveAPIContainerInfo.prototype.setGrpcProxyPortInsideEnclave = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.EnclaveAPIContainerHostMachineInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.EnclaveAPIContainerHostMachineInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.EnclaveAPIContainerHostMachineInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.EnclaveAPIContainerHostMachineInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    ipOnHostMachine: jspb.Message.getFieldWithDefault(msg, 4, ""),
    grpcPortOnHostMachine: jspb.Message.getFieldWithDefault(msg, 5, 0),
    grpcProxyPortOnHostMachine: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.EnclaveAPIContainerHostMachineInfo}
 */
proto.engine_api.EnclaveAPIContainerHostMachineInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.EnclaveAPIContainerHostMachineInfo;
  return proto.engine_api.EnclaveAPIContainerHostMachineInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.EnclaveAPIContainerHostMachineInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.EnclaveAPIContainerHostMachineInfo}
 */
proto.engine_api.EnclaveAPIContainerHostMachineInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpOnHostMachine(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGrpcPortOnHostMachine(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGrpcProxyPortOnHostMachine(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.EnclaveAPIContainerHostMachineInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.EnclaveAPIContainerHostMachineInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.EnclaveAPIContainerHostMachineInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.EnclaveAPIContainerHostMachineInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIpOnHostMachine();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGrpcPortOnHostMachine();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getGrpcProxyPortOnHostMachine();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional string ip_on_host_machine = 4;
 * @return {string}
 */
proto.engine_api.EnclaveAPIContainerHostMachineInfo.prototype.getIpOnHostMachine = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.EnclaveAPIContainerHostMachineInfo} returns this
 */
proto.engine_api.EnclaveAPIContainerHostMachineInfo.prototype.setIpOnHostMachine = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 grpc_port_on_host_machine = 5;
 * @return {number}
 */
proto.engine_api.EnclaveAPIContainerHostMachineInfo.prototype.getGrpcPortOnHostMachine = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.engine_api.EnclaveAPIContainerHostMachineInfo} returns this
 */
proto.engine_api.EnclaveAPIContainerHostMachineInfo.prototype.setGrpcPortOnHostMachine = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 grpc_proxy_port_on_host_machine = 6;
 * @return {number}
 */
proto.engine_api.EnclaveAPIContainerHostMachineInfo.prototype.getGrpcProxyPortOnHostMachine = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.engine_api.EnclaveAPIContainerHostMachineInfo} returns this
 */
proto.engine_api.EnclaveAPIContainerHostMachineInfo.prototype.setGrpcProxyPortOnHostMachine = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.EnclaveInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.EnclaveInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.EnclaveInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.EnclaveInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    enclaveUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    shortenedUuid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    containersStatus: jspb.Message.getFieldWithDefault(msg, 4, 0),
    apiContainerStatus: jspb.Message.getFieldWithDefault(msg, 5, 0),
    apiContainerInfo: (f = msg.getApiContainerInfo()) && proto.engine_api.EnclaveAPIContainerInfo.toObject(includeInstance, f),
    apiContainerHostMachineInfo: (f = msg.getApiContainerHostMachineInfo()) && proto.engine_api.EnclaveAPIContainerHostMachineInfo.toObject(includeInstance, f),
    creationTime: (f = msg.getCreationTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.EnclaveInfo}
 */
proto.engine_api.EnclaveInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.EnclaveInfo;
  return proto.engine_api.EnclaveInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.EnclaveInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.EnclaveInfo}
 */
proto.engine_api.EnclaveInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnclaveUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortenedUuid(value);
      break;
    case 4:
      var value = /** @type {!proto.engine_api.EnclaveContainersStatus} */ (reader.readEnum());
      msg.setContainersStatus(value);
      break;
    case 5:
      var value = /** @type {!proto.engine_api.EnclaveAPIContainerStatus} */ (reader.readEnum());
      msg.setApiContainerStatus(value);
      break;
    case 6:
      var value = new proto.engine_api.EnclaveAPIContainerInfo;
      reader.readMessage(value,proto.engine_api.EnclaveAPIContainerInfo.deserializeBinaryFromReader);
      msg.setApiContainerInfo(value);
      break;
    case 7:
      var value = new proto.engine_api.EnclaveAPIContainerHostMachineInfo;
      reader.readMessage(value,proto.engine_api.EnclaveAPIContainerHostMachineInfo.deserializeBinaryFromReader);
      msg.setApiContainerHostMachineInfo(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.EnclaveInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.EnclaveInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.EnclaveInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.EnclaveInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnclaveUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getShortenedUuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContainersStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getApiContainerStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getApiContainerInfo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.engine_api.EnclaveAPIContainerInfo.serializeBinaryToWriter
    );
  }
  f = message.getApiContainerHostMachineInfo();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.engine_api.EnclaveAPIContainerHostMachineInfo.serializeBinaryToWriter
    );
  }
  f = message.getCreationTime();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string enclave_uuid = 1;
 * @return {string}
 */
proto.engine_api.EnclaveInfo.prototype.getEnclaveUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.EnclaveInfo} returns this
 */
proto.engine_api.EnclaveInfo.prototype.setEnclaveUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.engine_api.EnclaveInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.EnclaveInfo} returns this
 */
proto.engine_api.EnclaveInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string shortened_uuid = 3;
 * @return {string}
 */
proto.engine_api.EnclaveInfo.prototype.getShortenedUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.EnclaveInfo} returns this
 */
proto.engine_api.EnclaveInfo.prototype.setShortenedUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional EnclaveContainersStatus containers_status = 4;
 * @return {!proto.engine_api.EnclaveContainersStatus}
 */
proto.engine_api.EnclaveInfo.prototype.getContainersStatus = function() {
  return /** @type {!proto.engine_api.EnclaveContainersStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.engine_api.EnclaveContainersStatus} value
 * @return {!proto.engine_api.EnclaveInfo} returns this
 */
proto.engine_api.EnclaveInfo.prototype.setContainersStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional EnclaveAPIContainerStatus api_container_status = 5;
 * @return {!proto.engine_api.EnclaveAPIContainerStatus}
 */
proto.engine_api.EnclaveInfo.prototype.getApiContainerStatus = function() {
  return /** @type {!proto.engine_api.EnclaveAPIContainerStatus} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.engine_api.EnclaveAPIContainerStatus} value
 * @return {!proto.engine_api.EnclaveInfo} returns this
 */
proto.engine_api.EnclaveInfo.prototype.setApiContainerStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional EnclaveAPIContainerInfo api_container_info = 6;
 * @return {?proto.engine_api.EnclaveAPIContainerInfo}
 */
proto.engine_api.EnclaveInfo.prototype.getApiContainerInfo = function() {
  return /** @type{?proto.engine_api.EnclaveAPIContainerInfo} */ (
    jspb.Message.getWrapperField(this, proto.engine_api.EnclaveAPIContainerInfo, 6));
};


/**
 * @param {?proto.engine_api.EnclaveAPIContainerInfo|undefined} value
 * @return {!proto.engine_api.EnclaveInfo} returns this
*/
proto.engine_api.EnclaveInfo.prototype.setApiContainerInfo = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.engine_api.EnclaveInfo} returns this
 */
proto.engine_api.EnclaveInfo.prototype.clearApiContainerInfo = function() {
  return this.setApiContainerInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.engine_api.EnclaveInfo.prototype.hasApiContainerInfo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional EnclaveAPIContainerHostMachineInfo api_container_host_machine_info = 7;
 * @return {?proto.engine_api.EnclaveAPIContainerHostMachineInfo}
 */
proto.engine_api.EnclaveInfo.prototype.getApiContainerHostMachineInfo = function() {
  return /** @type{?proto.engine_api.EnclaveAPIContainerHostMachineInfo} */ (
    jspb.Message.getWrapperField(this, proto.engine_api.EnclaveAPIContainerHostMachineInfo, 7));
};


/**
 * @param {?proto.engine_api.EnclaveAPIContainerHostMachineInfo|undefined} value
 * @return {!proto.engine_api.EnclaveInfo} returns this
*/
proto.engine_api.EnclaveInfo.prototype.setApiContainerHostMachineInfo = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.engine_api.EnclaveInfo} returns this
 */
proto.engine_api.EnclaveInfo.prototype.clearApiContainerHostMachineInfo = function() {
  return this.setApiContainerHostMachineInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.engine_api.EnclaveInfo.prototype.hasApiContainerHostMachineInfo = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp creation_time = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.engine_api.EnclaveInfo.prototype.getCreationTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.engine_api.EnclaveInfo} returns this
*/
proto.engine_api.EnclaveInfo.prototype.setCreationTime = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.engine_api.EnclaveInfo} returns this
 */
proto.engine_api.EnclaveInfo.prototype.clearCreationTime = function() {
  return this.setCreationTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.engine_api.EnclaveInfo.prototype.hasCreationTime = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.GetEnclavesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.GetEnclavesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.GetEnclavesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.GetEnclavesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    enclaveInfoMap: (f = msg.getEnclaveInfoMap()) ? f.toObject(includeInstance, proto.engine_api.EnclaveInfo.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.GetEnclavesResponse}
 */
proto.engine_api.GetEnclavesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.GetEnclavesResponse;
  return proto.engine_api.GetEnclavesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.GetEnclavesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.GetEnclavesResponse}
 */
proto.engine_api.GetEnclavesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getEnclaveInfoMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.engine_api.EnclaveInfo.deserializeBinaryFromReader, "", new proto.engine_api.EnclaveInfo());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.GetEnclavesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.GetEnclavesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.GetEnclavesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.GetEnclavesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnclaveInfoMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.engine_api.EnclaveInfo.serializeBinaryToWriter);
  }
};


/**
 * map<string, EnclaveInfo> enclave_info = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.engine_api.EnclaveInfo>}
 */
proto.engine_api.GetEnclavesResponse.prototype.getEnclaveInfoMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.engine_api.EnclaveInfo>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.engine_api.EnclaveInfo));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.engine_api.GetEnclavesResponse} returns this
 */
proto.engine_api.GetEnclavesResponse.prototype.clearEnclaveInfoMap = function() {
  this.getEnclaveInfoMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.EnclaveIdentifiers.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.EnclaveIdentifiers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.EnclaveIdentifiers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.EnclaveIdentifiers.toObject = function(includeInstance, msg) {
  var f, obj = {
    enclaveUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    shortenedUuid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.EnclaveIdentifiers}
 */
proto.engine_api.EnclaveIdentifiers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.EnclaveIdentifiers;
  return proto.engine_api.EnclaveIdentifiers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.EnclaveIdentifiers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.EnclaveIdentifiers}
 */
proto.engine_api.EnclaveIdentifiers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnclaveUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortenedUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.EnclaveIdentifiers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.EnclaveIdentifiers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.EnclaveIdentifiers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.EnclaveIdentifiers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnclaveUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getShortenedUuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string enclave_uuid = 1;
 * @return {string}
 */
proto.engine_api.EnclaveIdentifiers.prototype.getEnclaveUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.EnclaveIdentifiers} returns this
 */
proto.engine_api.EnclaveIdentifiers.prototype.setEnclaveUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.engine_api.EnclaveIdentifiers.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.EnclaveIdentifiers} returns this
 */
proto.engine_api.EnclaveIdentifiers.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string shortened_uuid = 3;
 * @return {string}
 */
proto.engine_api.EnclaveIdentifiers.prototype.getShortenedUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.EnclaveIdentifiers} returns this
 */
proto.engine_api.EnclaveIdentifiers.prototype.setShortenedUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    allidentifiersList: jspb.Message.toObjectList(msg.getAllidentifiersList(),
    proto.engine_api.EnclaveIdentifiers.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse}
 */
proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse;
  return proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse}
 */
proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.engine_api.EnclaveIdentifiers;
      reader.readMessage(value,proto.engine_api.EnclaveIdentifiers.deserializeBinaryFromReader);
      msg.addAllidentifiers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllidentifiersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.engine_api.EnclaveIdentifiers.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EnclaveIdentifiers allIdentifiers = 1;
 * @return {!Array<!proto.engine_api.EnclaveIdentifiers>}
 */
proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse.prototype.getAllidentifiersList = function() {
  return /** @type{!Array<!proto.engine_api.EnclaveIdentifiers>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.engine_api.EnclaveIdentifiers, 1));
};


/**
 * @param {!Array<!proto.engine_api.EnclaveIdentifiers>} value
 * @return {!proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse} returns this
*/
proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse.prototype.setAllidentifiersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.engine_api.EnclaveIdentifiers=} opt_value
 * @param {number=} opt_index
 * @return {!proto.engine_api.EnclaveIdentifiers}
 */
proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse.prototype.addAllidentifiers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.engine_api.EnclaveIdentifiers, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse} returns this
 */
proto.engine_api.GetExistingAndHistoricalEnclaveIdentifiersResponse.prototype.clearAllidentifiersList = function() {
  return this.setAllidentifiersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.StopEnclaveArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.StopEnclaveArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.StopEnclaveArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.StopEnclaveArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    enclaveIdentifier: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.StopEnclaveArgs}
 */
proto.engine_api.StopEnclaveArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.StopEnclaveArgs;
  return proto.engine_api.StopEnclaveArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.StopEnclaveArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.StopEnclaveArgs}
 */
proto.engine_api.StopEnclaveArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnclaveIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.StopEnclaveArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.StopEnclaveArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.StopEnclaveArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.StopEnclaveArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnclaveIdentifier();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string enclave_identifier = 1;
 * @return {string}
 */
proto.engine_api.StopEnclaveArgs.prototype.getEnclaveIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.StopEnclaveArgs} returns this
 */
proto.engine_api.StopEnclaveArgs.prototype.setEnclaveIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.DestroyEnclaveArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.DestroyEnclaveArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.DestroyEnclaveArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.DestroyEnclaveArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    enclaveIdentifier: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.DestroyEnclaveArgs}
 */
proto.engine_api.DestroyEnclaveArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.DestroyEnclaveArgs;
  return proto.engine_api.DestroyEnclaveArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.DestroyEnclaveArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.DestroyEnclaveArgs}
 */
proto.engine_api.DestroyEnclaveArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnclaveIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.DestroyEnclaveArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.DestroyEnclaveArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.DestroyEnclaveArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.DestroyEnclaveArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnclaveIdentifier();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string enclave_identifier = 1;
 * @return {string}
 */
proto.engine_api.DestroyEnclaveArgs.prototype.getEnclaveIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.DestroyEnclaveArgs} returns this
 */
proto.engine_api.DestroyEnclaveArgs.prototype.setEnclaveIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.CleanArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.CleanArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.CleanArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.CleanArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    shouldCleanAll: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.CleanArgs}
 */
proto.engine_api.CleanArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.CleanArgs;
  return proto.engine_api.CleanArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.CleanArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.CleanArgs}
 */
proto.engine_api.CleanArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShouldCleanAll(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.CleanArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.CleanArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.CleanArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.CleanArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShouldCleanAll();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool should_clean_all = 1;
 * @return {boolean}
 */
proto.engine_api.CleanArgs.prototype.getShouldCleanAll = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.engine_api.CleanArgs} returns this
 */
proto.engine_api.CleanArgs.prototype.setShouldCleanAll = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.EnclaveNameAndUuid.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.EnclaveNameAndUuid.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.EnclaveNameAndUuid} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.EnclaveNameAndUuid.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.EnclaveNameAndUuid}
 */
proto.engine_api.EnclaveNameAndUuid.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.EnclaveNameAndUuid;
  return proto.engine_api.EnclaveNameAndUuid.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.EnclaveNameAndUuid} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.EnclaveNameAndUuid}
 */
proto.engine_api.EnclaveNameAndUuid.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.EnclaveNameAndUuid.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.EnclaveNameAndUuid.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.EnclaveNameAndUuid} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.EnclaveNameAndUuid.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.engine_api.EnclaveNameAndUuid.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.EnclaveNameAndUuid} returns this
 */
proto.engine_api.EnclaveNameAndUuid.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.engine_api.EnclaveNameAndUuid.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.EnclaveNameAndUuid} returns this
 */
proto.engine_api.EnclaveNameAndUuid.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.engine_api.CleanResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.CleanResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.CleanResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.CleanResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.CleanResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    removedEnclaveNameAndUuidsList: jspb.Message.toObjectList(msg.getRemovedEnclaveNameAndUuidsList(),
    proto.engine_api.EnclaveNameAndUuid.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.CleanResponse}
 */
proto.engine_api.CleanResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.CleanResponse;
  return proto.engine_api.CleanResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.CleanResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.CleanResponse}
 */
proto.engine_api.CleanResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.engine_api.EnclaveNameAndUuid;
      reader.readMessage(value,proto.engine_api.EnclaveNameAndUuid.deserializeBinaryFromReader);
      msg.addRemovedEnclaveNameAndUuids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.CleanResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.CleanResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.CleanResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.CleanResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRemovedEnclaveNameAndUuidsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.engine_api.EnclaveNameAndUuid.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EnclaveNameAndUuid removed_enclave_name_and_uuids = 1;
 * @return {!Array<!proto.engine_api.EnclaveNameAndUuid>}
 */
proto.engine_api.CleanResponse.prototype.getRemovedEnclaveNameAndUuidsList = function() {
  return /** @type{!Array<!proto.engine_api.EnclaveNameAndUuid>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.engine_api.EnclaveNameAndUuid, 1));
};


/**
 * @param {!Array<!proto.engine_api.EnclaveNameAndUuid>} value
 * @return {!proto.engine_api.CleanResponse} returns this
*/
proto.engine_api.CleanResponse.prototype.setRemovedEnclaveNameAndUuidsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.engine_api.EnclaveNameAndUuid=} opt_value
 * @param {number=} opt_index
 * @return {!proto.engine_api.EnclaveNameAndUuid}
 */
proto.engine_api.CleanResponse.prototype.addRemovedEnclaveNameAndUuids = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.engine_api.EnclaveNameAndUuid, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.engine_api.CleanResponse} returns this
 */
proto.engine_api.CleanResponse.prototype.clearRemovedEnclaveNameAndUuidsList = function() {
  return this.setRemovedEnclaveNameAndUuidsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.engine_api.GetServiceLogsArgs.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.GetServiceLogsArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.GetServiceLogsArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.GetServiceLogsArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.GetServiceLogsArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    enclaveIdentifier: jspb.Message.getFieldWithDefault(msg, 1, ""),
    serviceUuidSetMap: (f = msg.getServiceUuidSetMap()) ? f.toObject(includeInstance, undefined) : [],
    followLogs: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    conjunctiveFiltersList: jspb.Message.toObjectList(msg.getConjunctiveFiltersList(),
    proto.engine_api.LogLineFilter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.GetServiceLogsArgs}
 */
proto.engine_api.GetServiceLogsArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.GetServiceLogsArgs;
  return proto.engine_api.GetServiceLogsArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.GetServiceLogsArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.GetServiceLogsArgs}
 */
proto.engine_api.GetServiceLogsArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnclaveIdentifier(value);
      break;
    case 2:
      var value = msg.getServiceUuidSetMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBool, null, "", false);
         });
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFollowLogs(value);
      break;
    case 4:
      var value = new proto.engine_api.LogLineFilter;
      reader.readMessage(value,proto.engine_api.LogLineFilter.deserializeBinaryFromReader);
      msg.addConjunctiveFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.GetServiceLogsArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.GetServiceLogsArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.GetServiceLogsArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.GetServiceLogsArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnclaveIdentifier();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getServiceUuidSetMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBool);
  }
  f = message.getFollowLogs();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getConjunctiveFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.engine_api.LogLineFilter.serializeBinaryToWriter
    );
  }
};


/**
 * optional string enclave_identifier = 1;
 * @return {string}
 */
proto.engine_api.GetServiceLogsArgs.prototype.getEnclaveIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.GetServiceLogsArgs} returns this
 */
proto.engine_api.GetServiceLogsArgs.prototype.setEnclaveIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, bool> service_uuid_set = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,boolean>}
 */
proto.engine_api.GetServiceLogsArgs.prototype.getServiceUuidSetMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,boolean>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.engine_api.GetServiceLogsArgs} returns this
 */
proto.engine_api.GetServiceLogsArgs.prototype.clearServiceUuidSetMap = function() {
  this.getServiceUuidSetMap().clear();
  return this;};


/**
 * optional bool follow_logs = 3;
 * @return {boolean}
 */
proto.engine_api.GetServiceLogsArgs.prototype.getFollowLogs = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.engine_api.GetServiceLogsArgs} returns this
 */
proto.engine_api.GetServiceLogsArgs.prototype.setFollowLogs = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * repeated LogLineFilter conjunctive_filters = 4;
 * @return {!Array<!proto.engine_api.LogLineFilter>}
 */
proto.engine_api.GetServiceLogsArgs.prototype.getConjunctiveFiltersList = function() {
  return /** @type{!Array<!proto.engine_api.LogLineFilter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.engine_api.LogLineFilter, 4));
};


/**
 * @param {!Array<!proto.engine_api.LogLineFilter>} value
 * @return {!proto.engine_api.GetServiceLogsArgs} returns this
*/
proto.engine_api.GetServiceLogsArgs.prototype.setConjunctiveFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.engine_api.LogLineFilter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.engine_api.LogLineFilter}
 */
proto.engine_api.GetServiceLogsArgs.prototype.addConjunctiveFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.engine_api.LogLineFilter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.engine_api.GetServiceLogsArgs} returns this
 */
proto.engine_api.GetServiceLogsArgs.prototype.clearConjunctiveFiltersList = function() {
  return this.setConjunctiveFiltersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.GetServiceLogsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.GetServiceLogsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.GetServiceLogsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.GetServiceLogsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceLogsByServiceUuidMap: (f = msg.getServiceLogsByServiceUuidMap()) ? f.toObject(includeInstance, proto.engine_api.LogLine.toObject) : [],
    notFoundServiceUuidSetMap: (f = msg.getNotFoundServiceUuidSetMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.GetServiceLogsResponse}
 */
proto.engine_api.GetServiceLogsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.GetServiceLogsResponse;
  return proto.engine_api.GetServiceLogsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.GetServiceLogsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.GetServiceLogsResponse}
 */
proto.engine_api.GetServiceLogsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getServiceLogsByServiceUuidMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.engine_api.LogLine.deserializeBinaryFromReader, "", new proto.engine_api.LogLine());
         });
      break;
    case 2:
      var value = msg.getNotFoundServiceUuidSetMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBool, null, "", false);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.GetServiceLogsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.GetServiceLogsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.GetServiceLogsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.GetServiceLogsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceLogsByServiceUuidMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.engine_api.LogLine.serializeBinaryToWriter);
  }
  f = message.getNotFoundServiceUuidSetMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBool);
  }
};


/**
 * map<string, LogLine> service_logs_by_service_uuid = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.engine_api.LogLine>}
 */
proto.engine_api.GetServiceLogsResponse.prototype.getServiceLogsByServiceUuidMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.engine_api.LogLine>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.engine_api.LogLine));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.engine_api.GetServiceLogsResponse} returns this
 */
proto.engine_api.GetServiceLogsResponse.prototype.clearServiceLogsByServiceUuidMap = function() {
  this.getServiceLogsByServiceUuidMap().clear();
  return this;};


/**
 * map<string, bool> not_found_service_uuid_set = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,boolean>}
 */
proto.engine_api.GetServiceLogsResponse.prototype.getNotFoundServiceUuidSetMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,boolean>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.engine_api.GetServiceLogsResponse} returns this
 */
proto.engine_api.GetServiceLogsResponse.prototype.clearNotFoundServiceUuidSetMap = function() {
  this.getNotFoundServiceUuidSetMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.engine_api.LogLine.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.LogLine.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.LogLine.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.LogLine} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.LogLine.toObject = function(includeInstance, msg) {
  var f, obj = {
    lineList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.LogLine}
 */
proto.engine_api.LogLine.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.LogLine;
  return proto.engine_api.LogLine.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.LogLine} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.LogLine}
 */
proto.engine_api.LogLine.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addLine(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.LogLine.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.LogLine.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.LogLine} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.LogLine.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLineList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string line = 1;
 * @return {!Array<string>}
 */
proto.engine_api.LogLine.prototype.getLineList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.engine_api.LogLine} returns this
 */
proto.engine_api.LogLine.prototype.setLineList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.engine_api.LogLine} returns this
 */
proto.engine_api.LogLine.prototype.addLine = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.engine_api.LogLine} returns this
 */
proto.engine_api.LogLine.prototype.clearLineList = function() {
  return this.setLineList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.engine_api.LogLineFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.engine_api.LogLineFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.engine_api.LogLineFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.LogLineFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    operator: jspb.Message.getFieldWithDefault(msg, 1, 0),
    textPattern: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.engine_api.LogLineFilter}
 */
proto.engine_api.LogLineFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.engine_api.LogLineFilter;
  return proto.engine_api.LogLineFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.engine_api.LogLineFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.engine_api.LogLineFilter}
 */
proto.engine_api.LogLineFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.engine_api.LogLineOperator} */ (reader.readEnum());
      msg.setOperator(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextPattern(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.engine_api.LogLineFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.engine_api.LogLineFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.engine_api.LogLineFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.engine_api.LogLineFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTextPattern();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional LogLineOperator operator = 1;
 * @return {!proto.engine_api.LogLineOperator}
 */
proto.engine_api.LogLineFilter.prototype.getOperator = function() {
  return /** @type {!proto.engine_api.LogLineOperator} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.engine_api.LogLineOperator} value
 * @return {!proto.engine_api.LogLineFilter} returns this
 */
proto.engine_api.LogLineFilter.prototype.setOperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string text_pattern = 2;
 * @return {string}
 */
proto.engine_api.LogLineFilter.prototype.getTextPattern = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.engine_api.LogLineFilter} returns this
 */
proto.engine_api.LogLineFilter.prototype.setTextPattern = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.engine_api.EnclaveContainersStatus = {
  ENCLAVECONTAINERSSTATUS_EMPTY: 0,
  ENCLAVECONTAINERSSTATUS_RUNNING: 1,
  ENCLAVECONTAINERSSTATUS_STOPPED: 2
};

/**
 * @enum {number}
 */
proto.engine_api.EnclaveAPIContainerStatus = {
  ENCLAVEAPICONTAINERSTATUS_NONEXISTENT: 0,
  ENCLAVEAPICONTAINERSTATUS_RUNNING: 1,
  ENCLAVEAPICONTAINERSTATUS_STOPPED: 2
};

/**
 * @enum {number}
 */
proto.engine_api.LogLineOperator = {
  LOGLINEOPERATOR_DOES_CONTAIN_TEXT: 0,
  LOGLINEOPERATOR_DOES_NOT_CONTAIN_TEXT: 1,
  LOGLINEOPERATOR_DOES_CONTAIN_MATCH_REGEX: 2,
  LOGLINEOPERATOR_DOES_NOT_CONTAIN_MATCH_REGEX: 3
};

goog.object.extend(exports, proto.engine_api);
