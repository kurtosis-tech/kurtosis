// @generated by protoc-gen-es v1.3.0 with parameter "target=js+dts"
// @generated from file portal_daemon_service.proto (package portal_daemon_api, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * may specify a specific port, or an entire enclave's worth of services and ports
 *
 * @generated from message portal_daemon_api.EnclaveServicePortId
 */
export const EnclaveServicePortId = proto3.makeMessageType(
  "portal_daemon_api.EnclaveServicePortId",
  () => [
    { no: 1, name: "enclave_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "service_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "port_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message portal_daemon_api.ForwardedServicePort
 */
export const ForwardedServicePort = proto3.makeMessageType(
  "portal_daemon_api.ForwardedServicePort",
  () => [
    { no: 1, name: "enclave_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "service_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "port_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "local_port_number", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message portal_daemon_api.CreateUserServicePortForwardArgs
 */
export const CreateUserServicePortForwardArgs = proto3.makeMessageType(
  "portal_daemon_api.CreateUserServicePortForwardArgs",
  () => [
    { no: 1, name: "enclaveServicePortId", kind: "message", T: EnclaveServicePortId },
    { no: 2, name: "local_port_number", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ],
);

/**
 * @generated from message portal_daemon_api.CreateUserServicePortForwardResponse
 */
export const CreateUserServicePortForwardResponse = proto3.makeMessageType(
  "portal_daemon_api.CreateUserServicePortForwardResponse",
  () => [
    { no: 1, name: "forwarded_port_numbers", kind: "message", T: ForwardedServicePort, repeated: true },
  ],
);

/**
 * @generated from message portal_daemon_api.RemoveUserServicePortForwardResponse
 */
export const RemoveUserServicePortForwardResponse = proto3.makeMessageType(
  "portal_daemon_api.RemoveUserServicePortForwardResponse",
  [],
);

/**
 * @generated from message portal_daemon_api.PortalPing
 */
export const PortalPing = proto3.makeMessageType(
  "portal_daemon_api.PortalPing",
  [],
);

/**
 * @generated from message portal_daemon_api.PortalPong
 */
export const PortalPong = proto3.makeMessageType(
  "portal_daemon_api.PortalPong",
  [],
);

