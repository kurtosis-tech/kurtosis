// source: portal_daemon_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.portal_daemon_api.CreateUserServicePortForwardArgs', null, global);
goog.exportSymbol('proto.portal_daemon_api.CreateUserServicePortForwardResponse', null, global);
goog.exportSymbol('proto.portal_daemon_api.EnclaveServicePortId', null, global);
goog.exportSymbol('proto.portal_daemon_api.ForwardedServicePort', null, global);
goog.exportSymbol('proto.portal_daemon_api.PortalPing', null, global);
goog.exportSymbol('proto.portal_daemon_api.PortalPong', null, global);
goog.exportSymbol('proto.portal_daemon_api.RemoveUserServicePortForwardResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portal_daemon_api.EnclaveServicePortId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portal_daemon_api.EnclaveServicePortId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portal_daemon_api.EnclaveServicePortId.displayName = 'proto.portal_daemon_api.EnclaveServicePortId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portal_daemon_api.ForwardedServicePort = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portal_daemon_api.ForwardedServicePort, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portal_daemon_api.ForwardedServicePort.displayName = 'proto.portal_daemon_api.ForwardedServicePort';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portal_daemon_api.CreateUserServicePortForwardArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portal_daemon_api.CreateUserServicePortForwardArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portal_daemon_api.CreateUserServicePortForwardArgs.displayName = 'proto.portal_daemon_api.CreateUserServicePortForwardArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portal_daemon_api.CreateUserServicePortForwardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.portal_daemon_api.CreateUserServicePortForwardResponse.repeatedFields_, null);
};
goog.inherits(proto.portal_daemon_api.CreateUserServicePortForwardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portal_daemon_api.CreateUserServicePortForwardResponse.displayName = 'proto.portal_daemon_api.CreateUserServicePortForwardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portal_daemon_api.RemoveUserServicePortForwardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portal_daemon_api.RemoveUserServicePortForwardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portal_daemon_api.RemoveUserServicePortForwardResponse.displayName = 'proto.portal_daemon_api.RemoveUserServicePortForwardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portal_daemon_api.PortalPing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portal_daemon_api.PortalPing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portal_daemon_api.PortalPing.displayName = 'proto.portal_daemon_api.PortalPing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.portal_daemon_api.PortalPong = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.portal_daemon_api.PortalPong, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.portal_daemon_api.PortalPong.displayName = 'proto.portal_daemon_api.PortalPong';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portal_daemon_api.EnclaveServicePortId.prototype.toObject = function(opt_includeInstance) {
  return proto.portal_daemon_api.EnclaveServicePortId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portal_daemon_api.EnclaveServicePortId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portal_daemon_api.EnclaveServicePortId.toObject = function(includeInstance, msg) {
  var f, obj = {
    enclaveId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    serviceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    portId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portal_daemon_api.EnclaveServicePortId}
 */
proto.portal_daemon_api.EnclaveServicePortId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portal_daemon_api.EnclaveServicePortId;
  return proto.portal_daemon_api.EnclaveServicePortId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portal_daemon_api.EnclaveServicePortId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portal_daemon_api.EnclaveServicePortId}
 */
proto.portal_daemon_api.EnclaveServicePortId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnclaveId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portal_daemon_api.EnclaveServicePortId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portal_daemon_api.EnclaveServicePortId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portal_daemon_api.EnclaveServicePortId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portal_daemon_api.EnclaveServicePortId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnclaveId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string enclave_id = 1;
 * @return {string}
 */
proto.portal_daemon_api.EnclaveServicePortId.prototype.getEnclaveId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.portal_daemon_api.EnclaveServicePortId} returns this
 */
proto.portal_daemon_api.EnclaveServicePortId.prototype.setEnclaveId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string service_id = 2;
 * @return {string}
 */
proto.portal_daemon_api.EnclaveServicePortId.prototype.getServiceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.portal_daemon_api.EnclaveServicePortId} returns this
 */
proto.portal_daemon_api.EnclaveServicePortId.prototype.setServiceId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.portal_daemon_api.EnclaveServicePortId} returns this
 */
proto.portal_daemon_api.EnclaveServicePortId.prototype.clearServiceId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.portal_daemon_api.EnclaveServicePortId.prototype.hasServiceId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string port_id = 3;
 * @return {string}
 */
proto.portal_daemon_api.EnclaveServicePortId.prototype.getPortId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.portal_daemon_api.EnclaveServicePortId} returns this
 */
proto.portal_daemon_api.EnclaveServicePortId.prototype.setPortId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.portal_daemon_api.EnclaveServicePortId} returns this
 */
proto.portal_daemon_api.EnclaveServicePortId.prototype.clearPortId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.portal_daemon_api.EnclaveServicePortId.prototype.hasPortId = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portal_daemon_api.ForwardedServicePort.prototype.toObject = function(opt_includeInstance) {
  return proto.portal_daemon_api.ForwardedServicePort.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portal_daemon_api.ForwardedServicePort} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portal_daemon_api.ForwardedServicePort.toObject = function(includeInstance, msg) {
  var f, obj = {
    enclaveId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    serviceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    portId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    localPortNumber: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portal_daemon_api.ForwardedServicePort}
 */
proto.portal_daemon_api.ForwardedServicePort.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portal_daemon_api.ForwardedServicePort;
  return proto.portal_daemon_api.ForwardedServicePort.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portal_daemon_api.ForwardedServicePort} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portal_daemon_api.ForwardedServicePort}
 */
proto.portal_daemon_api.ForwardedServicePort.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnclaveId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLocalPortNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portal_daemon_api.ForwardedServicePort.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portal_daemon_api.ForwardedServicePort.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portal_daemon_api.ForwardedServicePort} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portal_daemon_api.ForwardedServicePort.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnclaveId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getServiceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPortId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocalPortNumber();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional string enclave_id = 1;
 * @return {string}
 */
proto.portal_daemon_api.ForwardedServicePort.prototype.getEnclaveId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.portal_daemon_api.ForwardedServicePort} returns this
 */
proto.portal_daemon_api.ForwardedServicePort.prototype.setEnclaveId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string service_id = 2;
 * @return {string}
 */
proto.portal_daemon_api.ForwardedServicePort.prototype.getServiceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.portal_daemon_api.ForwardedServicePort} returns this
 */
proto.portal_daemon_api.ForwardedServicePort.prototype.setServiceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string port_id = 3;
 * @return {string}
 */
proto.portal_daemon_api.ForwardedServicePort.prototype.getPortId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.portal_daemon_api.ForwardedServicePort} returns this
 */
proto.portal_daemon_api.ForwardedServicePort.prototype.setPortId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 local_port_number = 4;
 * @return {number}
 */
proto.portal_daemon_api.ForwardedServicePort.prototype.getLocalPortNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.portal_daemon_api.ForwardedServicePort} returns this
 */
proto.portal_daemon_api.ForwardedServicePort.prototype.setLocalPortNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portal_daemon_api.CreateUserServicePortForwardArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.portal_daemon_api.CreateUserServicePortForwardArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portal_daemon_api.CreateUserServicePortForwardArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portal_daemon_api.CreateUserServicePortForwardArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    enclaveserviceportid: (f = msg.getEnclaveserviceportid()) && proto.portal_daemon_api.EnclaveServicePortId.toObject(includeInstance, f),
    localPortNumber: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portal_daemon_api.CreateUserServicePortForwardArgs}
 */
proto.portal_daemon_api.CreateUserServicePortForwardArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portal_daemon_api.CreateUserServicePortForwardArgs;
  return proto.portal_daemon_api.CreateUserServicePortForwardArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portal_daemon_api.CreateUserServicePortForwardArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portal_daemon_api.CreateUserServicePortForwardArgs}
 */
proto.portal_daemon_api.CreateUserServicePortForwardArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.portal_daemon_api.EnclaveServicePortId;
      reader.readMessage(value,proto.portal_daemon_api.EnclaveServicePortId.deserializeBinaryFromReader);
      msg.setEnclaveserviceportid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLocalPortNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portal_daemon_api.CreateUserServicePortForwardArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portal_daemon_api.CreateUserServicePortForwardArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portal_daemon_api.CreateUserServicePortForwardArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portal_daemon_api.CreateUserServicePortForwardArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnclaveserviceportid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.portal_daemon_api.EnclaveServicePortId.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional EnclaveServicePortId enclaveServicePortId = 1;
 * @return {?proto.portal_daemon_api.EnclaveServicePortId}
 */
proto.portal_daemon_api.CreateUserServicePortForwardArgs.prototype.getEnclaveserviceportid = function() {
  return /** @type{?proto.portal_daemon_api.EnclaveServicePortId} */ (
    jspb.Message.getWrapperField(this, proto.portal_daemon_api.EnclaveServicePortId, 1));
};


/**
 * @param {?proto.portal_daemon_api.EnclaveServicePortId|undefined} value
 * @return {!proto.portal_daemon_api.CreateUserServicePortForwardArgs} returns this
*/
proto.portal_daemon_api.CreateUserServicePortForwardArgs.prototype.setEnclaveserviceportid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.portal_daemon_api.CreateUserServicePortForwardArgs} returns this
 */
proto.portal_daemon_api.CreateUserServicePortForwardArgs.prototype.clearEnclaveserviceportid = function() {
  return this.setEnclaveserviceportid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.portal_daemon_api.CreateUserServicePortForwardArgs.prototype.hasEnclaveserviceportid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 local_port_number = 2;
 * @return {number}
 */
proto.portal_daemon_api.CreateUserServicePortForwardArgs.prototype.getLocalPortNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.portal_daemon_api.CreateUserServicePortForwardArgs} returns this
 */
proto.portal_daemon_api.CreateUserServicePortForwardArgs.prototype.setLocalPortNumber = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.portal_daemon_api.CreateUserServicePortForwardArgs} returns this
 */
proto.portal_daemon_api.CreateUserServicePortForwardArgs.prototype.clearLocalPortNumber = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.portal_daemon_api.CreateUserServicePortForwardArgs.prototype.hasLocalPortNumber = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.portal_daemon_api.CreateUserServicePortForwardResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portal_daemon_api.CreateUserServicePortForwardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.portal_daemon_api.CreateUserServicePortForwardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portal_daemon_api.CreateUserServicePortForwardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portal_daemon_api.CreateUserServicePortForwardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    forwardedPortNumbersList: jspb.Message.toObjectList(msg.getForwardedPortNumbersList(),
    proto.portal_daemon_api.ForwardedServicePort.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portal_daemon_api.CreateUserServicePortForwardResponse}
 */
proto.portal_daemon_api.CreateUserServicePortForwardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portal_daemon_api.CreateUserServicePortForwardResponse;
  return proto.portal_daemon_api.CreateUserServicePortForwardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portal_daemon_api.CreateUserServicePortForwardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portal_daemon_api.CreateUserServicePortForwardResponse}
 */
proto.portal_daemon_api.CreateUserServicePortForwardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.portal_daemon_api.ForwardedServicePort;
      reader.readMessage(value,proto.portal_daemon_api.ForwardedServicePort.deserializeBinaryFromReader);
      msg.addForwardedPortNumbers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portal_daemon_api.CreateUserServicePortForwardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portal_daemon_api.CreateUserServicePortForwardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portal_daemon_api.CreateUserServicePortForwardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portal_daemon_api.CreateUserServicePortForwardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getForwardedPortNumbersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.portal_daemon_api.ForwardedServicePort.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ForwardedServicePort forwarded_port_numbers = 1;
 * @return {!Array<!proto.portal_daemon_api.ForwardedServicePort>}
 */
proto.portal_daemon_api.CreateUserServicePortForwardResponse.prototype.getForwardedPortNumbersList = function() {
  return /** @type{!Array<!proto.portal_daemon_api.ForwardedServicePort>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.portal_daemon_api.ForwardedServicePort, 1));
};


/**
 * @param {!Array<!proto.portal_daemon_api.ForwardedServicePort>} value
 * @return {!proto.portal_daemon_api.CreateUserServicePortForwardResponse} returns this
*/
proto.portal_daemon_api.CreateUserServicePortForwardResponse.prototype.setForwardedPortNumbersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.portal_daemon_api.ForwardedServicePort=} opt_value
 * @param {number=} opt_index
 * @return {!proto.portal_daemon_api.ForwardedServicePort}
 */
proto.portal_daemon_api.CreateUserServicePortForwardResponse.prototype.addForwardedPortNumbers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.portal_daemon_api.ForwardedServicePort, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.portal_daemon_api.CreateUserServicePortForwardResponse} returns this
 */
proto.portal_daemon_api.CreateUserServicePortForwardResponse.prototype.clearForwardedPortNumbersList = function() {
  return this.setForwardedPortNumbersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portal_daemon_api.RemoveUserServicePortForwardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.portal_daemon_api.RemoveUserServicePortForwardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portal_daemon_api.RemoveUserServicePortForwardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portal_daemon_api.RemoveUserServicePortForwardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portal_daemon_api.RemoveUserServicePortForwardResponse}
 */
proto.portal_daemon_api.RemoveUserServicePortForwardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portal_daemon_api.RemoveUserServicePortForwardResponse;
  return proto.portal_daemon_api.RemoveUserServicePortForwardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portal_daemon_api.RemoveUserServicePortForwardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portal_daemon_api.RemoveUserServicePortForwardResponse}
 */
proto.portal_daemon_api.RemoveUserServicePortForwardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portal_daemon_api.RemoveUserServicePortForwardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portal_daemon_api.RemoveUserServicePortForwardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portal_daemon_api.RemoveUserServicePortForwardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portal_daemon_api.RemoveUserServicePortForwardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portal_daemon_api.PortalPing.prototype.toObject = function(opt_includeInstance) {
  return proto.portal_daemon_api.PortalPing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portal_daemon_api.PortalPing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portal_daemon_api.PortalPing.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portal_daemon_api.PortalPing}
 */
proto.portal_daemon_api.PortalPing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portal_daemon_api.PortalPing;
  return proto.portal_daemon_api.PortalPing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portal_daemon_api.PortalPing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portal_daemon_api.PortalPing}
 */
proto.portal_daemon_api.PortalPing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portal_daemon_api.PortalPing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portal_daemon_api.PortalPing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portal_daemon_api.PortalPing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portal_daemon_api.PortalPing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.portal_daemon_api.PortalPong.prototype.toObject = function(opt_includeInstance) {
  return proto.portal_daemon_api.PortalPong.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.portal_daemon_api.PortalPong} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portal_daemon_api.PortalPong.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.portal_daemon_api.PortalPong}
 */
proto.portal_daemon_api.PortalPong.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.portal_daemon_api.PortalPong;
  return proto.portal_daemon_api.PortalPong.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.portal_daemon_api.PortalPong} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.portal_daemon_api.PortalPong}
 */
proto.portal_daemon_api.PortalPong.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.portal_daemon_api.PortalPong.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.portal_daemon_api.PortalPong.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.portal_daemon_api.PortalPong} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.portal_daemon_api.PortalPong.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.portal_daemon_api);
