name: Dependabot auto-label & set auto merge
on: pull_request

# Inspired from https://docs.github.com/en/code-security/dependabot/working-with-dependabot/automating-dependabot-with-github-actions
permissions:
  pull-requests: write
  contents: write

jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: "${{ secrets.RELEASER_TOKEN }}"
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.18.0'
      # update go mod
      - name: Clean up go mod as dependabot deletes kurtosis_version
        run: |
          ./scripts/generate-kurtosis-version.sh
          cd ".${{steps.metadata.outputs.directory}}"
          go get github.com/kurtosis-tech/kurtosis/kurtosis_version@v0.0.0
      # run go mod tidy on others as there might be dependents who use us this package
      - name: Run go.mod tidy on all others
        run: |
          set -euo pipefail
          # List of directories to navigate to
          directories=("core/launcher" "core/server" "engine/launcher" "engine/server" "cli/cli" "internal_testsuites/golang")
          cwd=$(pwd)

          # Loop through the directories
          for dir in "${directories[@]}"
          do
            if ! echo "${{steps.metadata.outputs.directory}}" | grep -q "$dir"; then
              cd "$dir"
              go mod tidy
              cd "$cwd"
            fi
          done
      # commit the go mod update
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          token: "${{ secrets.RELEASER_TOKEN }}"
      - name: Approve a PR
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
